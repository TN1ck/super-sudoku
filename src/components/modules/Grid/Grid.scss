// Adapted from https://github.com/LIQIDTechnology/liqid-react-components

@import 'src/styles/variables';

// Set the number of columns you want to use on your layout.
$grid-columns: 12 !default;
// Set the gutter between columns.
$grid-gutter-width: $margin__2 !default;


// Small screen / tablet
$container-tablet:             ($screen__sm-container + $grid-gutter-width) !default;

$container-sm:                 $container-tablet !default;

// Medium screen / desktop
$container-desktop:            ($screen__md-container + $grid-gutter-width) !default;
$container-md:                 $container-desktop !default;

// Large screen / wide desktop
$container-large-desktop:      ($screen__lg-container + $grid-gutter-width) !default;
$container-lg:                 $container-large-desktop !default;

$breakpoints:
xs 0 100%,
sm $screen__sm $container-sm,
md $screen__md $container-md,
lg $screen__lg $container-lg;
$flexboxgrid-max-width: $screen__lg !default;

$gutter-compensation: $grid-gutter-width * .5 * -1;
$half-gutter-width: $grid-gutter-width * .5;

.fb-container {
    box-sizing: border-box;
    max-width: $flexboxgrid-max-width;
    margin: 0 auto;
}

.fb-container-fluid {
    margin-right: auto;
    margin-left: auto;
    max-width: $flexboxgrid-max-width;
    padding-right: floor(($grid-gutter-width / 2));;
    padding-left: ceil(($grid-gutter-width / 2));
}

.fb-container-full-height {
  height: 100%;
}

.fb-row {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    // if the row is wrapped in another flex, make sure that width is 100%
    flex-grow: 1;
    margin-right: $gutter-compensation;
    margin-left: $gutter-compensation;

    &--no-gutter {
        margin-left: 0;
        margin-right: 0;

        > .fb-col {
            padding-left: 0;
            padding-right: 0;
        }
    }

    // Add gutter on cols
    &--gutter-top-bottom {
        margin-top: $grid-gutter-width;
        margin-bottom: $grid-gutter-width;

        > .fb-col {
            padding-top: $half-gutter-width;
            padding-bottom: $half-gutter-width;
        }
    }
}

$regular-bottom-margin: $grid-gutter-width / 2;

// Adds margin to bottom of current element
.fb-bottom-margin {
    &--0-5 {
        margin-bottom: $regular-bottom-margin / 2;
    }
    &--1 {
        margin-bottom: $regular-bottom-margin;
    }
    &--1-5 {
        margin-bottom: $regular-bottom-margin * 1.5;
    }
    &--2 {
        margin-bottom: $regular-bottom-margin * 2;
    }
    &--2-5 {
        margin-bottom: $regular-bottom-margin * 2.5;
    }
    &--3 {
        margin-bottom: $regular-bottom-margin * 3;
    }
}

.fb-row.reverse {
    flex-direction: row-reverse;
}

.fb-col.reverse {
    flex-direction: column-reverse;
}

.fb-flex {
    display: flex;
}



@each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $size: nth($breakpoint, 2);
    $container: nth($breakpoint, 3);

    @media only screen and (min-width: $size) {
        .fb-container {
            width: $container;
        }

        .fb-col {
          padding-right: $half-gutter-width;
          padding-left: $half-gutter-width;
        }

        .fb-col-#{$name} {
            flex-direction: column;
            // bug in safari https://github.com/philipwalton/flexbugs/issues/132
            div[class^="fb-col-"], div[class*=" fb-col-"] {
                flex-basis: auto;
            }
        }

        .fb-bottom-margin-#{$name} {
            &--0 {
                margin-bottom: 0;
            }
            &--0-5 {
                margin-bottom: $regular-bottom-margin / 2;
            }
            &--1 {
                margin-bottom: $regular-bottom-margin;
            }
            &--1-5 {
                margin-bottom: $regular-bottom-margin * 1.5;
            }
            &--2 {
                margin-bottom: $regular-bottom-margin * 2;
            }
            &--2-5 {
                margin-bottom: $regular-bottom-margin * 2.5;
            }
            &--3 {
                margin-bottom: $regular-bottom-margin * 3;
            }
        }

        .fb-row-#{$name} {
            flex-direction: row;
        }

        // with flex-basis 0, every element get's the same size
        .fb-col-#{$name}-same {
            display: block;
            padding-right: $half-gutter-width;
            padding-left: $half-gutter-width;
            flex-grow: 1;
            flex-shrink: 1;
            flex-basis: 0;
            width: auto;
        }

        .fb-col-#{$name}-auto {
            display: block;
            padding-right: $half-gutter-width;
            padding-left: $half-gutter-width;
            flex-grow: 1;
            flex-shrink: 1;
            flex-basis: auto;
            width: auto;
        }

        .fb-col-#{$name}-no-grow {
            display: block;
            padding-right: $half-gutter-width;
            padding-left: $half-gutter-width;
            flex-grow: 0;
            flex-shrink: 0;
            flex-basis: auto;
            width: auto;
        }

        .fb-col-#{$name}-0 {
            display: none;
        }

        @for $i from 1 through $grid-columns {
            .fb-col-#{$name}-#{$i} {
                display: block;
                padding-right: $half-gutter-width;
                padding-left: $half-gutter-width;
                flex-grow: 0;
                flex-shrink: 1;
                // !!! this is because of IE10 - IE11
                // https://github.com/philipwalton/flexbugs#7-flex-basis-doesnt-account-for-box-sizingborder-box
                flex-basis: auto;
                width: (100% / $grid-columns) * $i;

                &.fb-flex {
                    display: flex;
                }
            }
        }

        @for $i from 0 through $grid-columns {
            .fb-col-#{$name}-offset-#{$i} {
                margin-left: (100% / $grid-columns) * $i
            }
        }

        .fb-start-#{$name} {
            justify-content: flex-start;
            text-align: left;
        }

        .fb-center-#{$name} {
            justify-content: center;
            text-align: center;
        }

        /**
         * Sometimes only contentblocks should be centered - not text
         */
        .fb-blockcenter-#{$name} {
            justify-content: center;
        }

        .fb-end-#{$name} {
            justify-content: flex-end;
        }

        .fb-top-#{$name} {
            align-items: flex-start;
        }

        .fb-middle-#{$name} {
            align-items: center;
        }

        .fb-stretch-#{$name} {
            align-items: stretch;
        }

        .fb-bottom-#{$name} {
            align-items: flex-end;
        }

        .fb-around-#{$name} {
            justify-content: space-around;
        }

        .fb-between-#{$name} {
            justify-content: space-between;
        }

        .fb-first-#{$name} {
            order: -1;
        }

        .fb-reverse-col-#{$name} {
            flex-direction: column-reverse;
        }

        .fb-reverse-row-#{$name} {
            flex-direction: row-reverse;
        }

        .fb-no-reverse-col-#{$name} {
            flex-direction: column;
        }

        .fb-no-reverse-row-#{$name} {
            flex-direction: row;
        }

        .fb-last-#{$name} {
            order: 1;
        }
    }
}
